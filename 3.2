#include<stdio.h>

#define MAX(a,b) (((a)>(b))?(a):(b))

#define MAX_DEGREE 101

 

typedef struct {

	int degree;

	float coef[MAX_DEGREE];

}polynomial;

 

 

polynomial poly_add1(polynomial A, polynomial B) {

	polynomial C;

	int Apos = 0, Bpos = 0, Cpos = 0;

	int degree_a = A.degree;

	int degree_b = B.degree;

	C.degree = MAX(A.degree, B.degree);

 

	while (Apos <= A.degree && Bpos <= B.degree) {

		if (degree_a > degree_b) {

			C.coef[Cpos++] = A.coef[Apos++];

			degree_a--;

		}

		else if (degree_a == degree_b) {

			C.coef[Cpos++] = A.coef[Apos++] + B.coef[Bpos++];

			degree_a--; degree_b--;

 

		}

		else {

			C.coef[Cpos++] = B.coef[Bpos++];

			degree_b--;

		}

	}

	return C;

}

 

void print_poly(polynomial p)

{

	for (int i = p.degree; i > 0; i--)

		printf("%3.1fx^%d+", p.coef[p.degree - i], i);

	printf("%3.1f \n", p.coef[p.degree]);

}

 

polynomial get_poly(const char* msg)

{

	int a1;

	polynomial a;

	printf("%s 차수를입력하시오 : ", msg);

	scanf("%d", &a1);

	a.degree = a1;

	for (int i = 0; i <= a.degree; i++) {

		printf("%d차계수를입력하시오 ", a.degree - i);

		scanf("%d", &a1);

		a.coef[i] = a1;

	}

	return a;

}

 

int main(void) {

 

	polynomial a,b,c;

	a = get_poly("첫째 다항식의 ");

	b = get_poly("둘째 다항식의 ");

	c = poly_add1(a, b);

	print_poly(a);

	print_poly(b);

	printf("----------------------------------------------\n");

	print_poly(c);

	return 0;

 

}
